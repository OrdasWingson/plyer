<Application x:Class="MassEffectPlyer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MassEffectPlyer"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        
        <!--Стиль пункта ListView-->
        <Style x:Key="SimpleListBoxItem" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Name="Border" Padding="2" SnapsToDevicePixels="true">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ListBoxItem.IsSelected" Value="true">
                                <Setter TargetName="Border" Property="Border.Background">
                                    <Setter.Value>
                                        <LinearGradientBrush SpreadMethod="Reflect" StartPoint="0,0" EndPoint="0,0.5">
                                            <GradientStop Color="#340413" Offset="0"/>
                                            <GradientStop Color="#FF040A" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Border" Property="UIElement.Opacity" Value="1"/>
                                <Setter Property="Control.BorderThickness" Value="1,1"/>
                                <Setter Property="Control.Foreground" Value="YellowGreen"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--хз что это такое-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true"
                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeDashArray="1 2"
                       StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Стиль кнопки-->
        <Style x:Key="DefaultButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.Foreground" Value="#A3E3FE"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Control.Padding}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Focusable="false"
                                RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                        Property="Border.BorderBrush"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter Property="Control.Foreground" Value="#E7AE68"/>
                            </Trigger>
                            <Trigger Property="ButtonBase.IsPressed" Value="true">
                                <Setter TargetName="border" Property="UIElement.Opacity" Value="0.5"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
  <!--*************************ВСЕ ДЛЯ СЛАЙДЕРА**************************************-->

       

        <!--заполнение градиентом полосы прокрутки-->
        <SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground" Color="Red"/>
        <LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#340413" Offset="0"/>
            <GradientStop Color="#FF040A" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="VerticalSliderTrackNormalBackground" Color="#740000"/>
        <LinearGradientBrush x:Key="VerticallSliderTrackNormalBorder" EndPoint="0,0.5" StartPoint="1,0.5">
            <GradientStop Color="#340413" Offset="1"/>
            <GradientStop Color="#A30000" Offset="0"/>
        </LinearGradientBrush>

        <!--загрузка картинки слайдера-->
        <Style x:Key="CustomThumbForSlider" TargetType="{x:Type Thumb}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle Height="19" Width="25">
                            <Shape.Fill>
                                <ImageBrush ImageSource="Image\thumb.png"/>
                            </Shape.Fill>
                        </Rectangle>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CustomThumbForSliderVert" TargetType="{x:Type Thumb}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle Height="25" Width="14">
                            <Shape.Fill>
                                <ImageBrush ImageSource="Image\thumbVert.png"/>
                            </Shape.Fill>
                        </Rectangle>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--обработка верхнтх и нижних частей линии слайдера-->
        <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="Control.IsTabStop" Value="false"/>
            <Setter Property="UIElement.Focusable" Value="false"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
